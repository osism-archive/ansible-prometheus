---
- name: Create required directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0755
  become: true
  with_items:
    - "{{ prometheus_docker_compose_directory }}"
    - "{{ prometheus_configuration_directory }}/alertmanager"
    - "{{ prometheus_configuration_directory }}/prometheus"
    - "{{ prometheus_configuration_directory }}/prometheus/targets"
    - "{{ prometheus_configuration_directory }}/prometheus/rules"

- name: Get status of {{ prometheus_custom_configuration_file }}
  stat:
    path: "{{ prometheus_custom_configuration_file }}"
  register: result

- name: Copy configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
  with_items:
    - src: prometheus.yml.j2
      dest: "{{ prometheus_configuration_directory }}/prometheus/prometheus.yml"
  when: result.stat.exists == False
  notify: Reload prometheus configuration

- name: Copy custom configuration files
  template:
    src: "{{ item }}"
    dest: "{{ prometheus_configuration_directory }}/prometheus/prometheus.yml"
    mode: 0644
  with_fileglob:
    - "{{ prometheus_custom_configuration_file }}"
  when: result.stat.exists == True
  notify: Reload prometheus configuration

- name: Copy integrated dynamic target configuration files
  template:
    src: "{{ item }}"
    dest: "{{ prometheus_configuration_directory }}/prometheus/targets/{{ item|basename|replace('.j2', '') }}"
    mode: 0644
  with_fileglob:
    - "templates/targets/*.yml.j2"

- name: Get status of {{ prometheus_custom_targets_directory }}
  stat:
    path: "{{ prometheus_custom_targets_directory }}"
  register: result
  delegate_to: localhost

- name: Copy additional dynamic target configuration files
  template:
    src: "{{ item }}"
    dest: "{{ prometheus_configuration_directory }}/prometheus/targets/{{ item|basename|replace('.j2', '') }}"
    mode: 0644
  with_fileglob:
    - "{{ prometheus_custom_targets_directory }}/*.yml.j2"
  when: result.stat.exists

- name: Copy integrated static rule configuration files
  copy:
    src: "{{ item }}"
    dest: "{{ prometheus_configuration_directory }}/prometheus/rules/{{ item|basename }}"
    mode: 0644
  with_fileglob:
    - rules/*.yml
  notify: Reload prometheus configuration
  when: prometheus_enable_alertmanager

- name: Get status of {{ prometheus_custom_rules_directory }}
  stat:
    path: "{{ prometheus_custom_rules_directory }}"
  register: result
  delegate_to: localhost
  when: prometheus_enable_alertmanager

- name: Copy additional static rule configuration files
  copy:
    src: "{{ item }}"
    dest: "{{ prometheus_configuration_directory }}/prometheus/rules/{{ item|basename }}"
    mode: 0644
  with_fileglob:
    - "{{ prometheus_custom_rules_directory }}/*.yml"
  notify: Reload prometheus configuration
  when:
    - prometheus_enable_alertmanager
    - result.stat.exists

- name: Copy integrated dynamic rule configuration files
  template:
    src: "{{ item }}"
    dest: "{{ prometheus_configuration_directory }}/prometheus/rules/{{ item|basename|replace('.j2', '') }}"
    mode: 0644
  with_fileglob:
    - templates/rules/*.yml.j2
  notify: Reload prometheus configuration
  when: prometheus_enable_alertmanager

- name: Copy additional dynamic rule configuration files
  template:
    src: "{{ item }}"
    dest: "{{ prometheus_configuration_directory }}/prometheus/rules/{{ item|basename|replace('.j2', '') }}"
    mode: 0644
  with_fileglob:
    - "{{ prometheus_custom_rules_directory }}/*.yml.j2"
  notify: Reload prometheus configuration
  when:
    - result.stat.exists
    - prometheus_enable_alertmanager

- name: Alertmanager - copy configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
  with_items:
    - src: alertmanager.yml.j2
      dest: "{{ prometheus_configuration_directory }}/alertmanager/alertmanager.yml"
  notify: Reload alertmanager configuration
  when: prometheus_enable_alertmanager

- name: nginx - create required directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0750
  become: true
  with_items:
    - "{{ prometheus_configuration_directory }}/nginx"

- name: nginx - install required packages
  package:
    name: "{{ item }}"
    state: present
  become: true
  with_items:
    - python-passlib
  when: prometheus_authentication

- name: nginx - prepare auth file
  htpasswd:
    path: "{{ prometheus_configuration_directory }}/nginx/htpasswd.nginx"
    name: "{{ prometheus_username }}"
    password: "{{ prometheus_password }}"
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0640
  when: prometheus_authentication

- name: nginx - copy configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ prometheus_configuration_directory }}/{{ item.dest }}"
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0640
  notify: Restart nginx service
  with_items:
    - src: nginx.conf.j2
      dest: nginx/nginx.conf

- name: Copy docker-compose.yml file
  template:
    src: docker-compose.yml.j2
    dest: "{{ prometheus_docker_compose_directory }}/docker-compose.yml"
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0640

- name: Pull images
  command: "docker-compose -f {{ prometheus_docker_compose_directory }}/docker-compose.yml pull"
  register: result
  changed_when: ('Downloaded' in result.stdout)

- name: Run service
  command: "docker-compose -f {{ prometheus_docker_compose_directory }}/docker-compose.yml up -d --remove-orphans --no-build"
  register: result
  changed_when: ('Creating' in result.stdout or 'Recreating' in result.stdout)

- name: Wait for service port
  wait_for:
    port: "{{ prometheus_port }}"
    host: "{{ prometheus_host }}"
    delay: 5

- name: Wait for service readiness
  uri:
    url: "http://{{ prometheus_host }}:{{ prometheus_port }}/-/ready"
    return_content: yes
  register: result
  until: "'Prometheus is Ready.' in result.content"
  retries: 10
  delay: 5
